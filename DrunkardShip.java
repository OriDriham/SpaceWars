import java.util.Random;

/**
 * Its pilot had too much to drink. This ship will always run away from the fight, and fire or
 * activate it's shield randomly. It will always accelerate, and will constantly turn away from
 * the closest ship.
 */
public class DrunkardShip extends SpaceShip {
    /*
    The maximal random value for the option selection.
     */
    private final static int MAX_RANDOM_VALUE = 2;

    /*
    The minimal random value for the option selection.
     */
    private final static int MIN_RANDOM_VALUE = 1;

    /*
    A counter for the amount of rounds this ship will perform a certain action.
     */
    private int ROUND_COUNTER = 0;

    /*
    The minimal value of the round counter.
     */
    private final static int ROUND_COUNTER_MIN = 0;

    /*
    The maximal value of the round counter.
     */
    private final static int ROUND_COUNTER_MAX = 10;

    /*
    The random generator used for initialization of the option selection.
     */
    private final Random randomGenerator = new Random();

    /*
    The random choice generated by the randomGenerator.
     */
    private int randomChoice;

    /**
     * Does the actions of this ship for this round.
     * This is called once per round by the SpaceWars game driver.
     *
     * @param game The game object to which this ship belongs.
     */
    @Override
    public void doAction(SpaceWars game) {
        deactivateShields();
        SpaceShip closestShip = game.getClosestShipTo(this);
        goAwayFromNearestShip(closestShip);
        if(ROUND_COUNTER == ROUND_COUNTER_MAX) {
            ROUND_COUNTER = ROUND_COUNTER_MIN;  // reset
        }
        if(ROUND_COUNTER == ROUND_COUNTER_MIN) {  // get a new random choice
            randomChoice = randomGenerator.nextInt(MAX_RANDOM_VALUE) + MIN_RANDOM_VALUE;
        }
        if(randomChoice == MIN_RANDOM_VALUE) {  // OPTION ONE: fire a shot not toward target
            fire(game);
        }
        else {  // OPTION TWO: activate shield for no reason
            shieldOn();
        }
        ROUND_COUNTER++;
        chargeEnergyPerRound();
    }
}
